---
import DefaultLayout from '../layouts/DefaultLayout.astro'
---

<DefaultLayout title="Compare Loop Speed" hideFooter={true}>
  <section class="my-12">
    <div class="container mx-auto">
      <h1 class="text-3xl font-bold">Compare Loop Speed (JS vs WebAssembly)</h1>
      <p class="mt-4 text-gray-700">Run an identical counting loop in plain JavaScript and in C++ compiled to WebAssembly to compare performance.</p>

      <div class="mt-8 flex flex-col gap-4">
        <label class="block">
          <span class="text-lg">Number of iterations</span>
          <input
            id="loopCount"
            type="number"
            min="1"
            value="10000000"
            class="mt-1 w-full rounded border p-2 text-black"
          />
        </label>

        <fieldset class="flex gap-4">
          <label class="flex items-center gap-2">
            <input type="radio" name="mode" id="mode-js" value="js" checked>
            <span>JavaScript</span>
          </label>
          <label class="flex items-center gap-2">
            <input type="radio" name="mode" id="mode-wasm" value="wasm">
            <span>WebAssembly (C++)</span>
          </label>
        </fieldset>

        <button id="startLoop" class="w-max rounded bg-blue-500 px-4 py-2 font-semibold text-white">
          Start Benchmark
        </button>

        <div class="grid grid-cols-1 gap-2 md:grid-cols-2">
          <p>Current Count: <span id="counter">0</span></p>
          <p>Elapsed Time: <span id="elapsedTime">0</span> ms</p>
        </div>
      </div>
    </div>
  </section>
</DefaultLayout>

<script type="module">
  import createModule from '/wasm-demos/loop.js';

  let t0 = 0;

  // 전역 콜백 등록
  window.onLoopLog = function (count) {
    document.getElementById('counter').textContent = count.toLocaleString();
    document.getElementById('elapsedTime').textContent = Math.round(performance.now() - t0);
  };

  createModule().then((Module) => {
    console.log('WASM Module initialized:', Module);
    window.Module = Module;

    document.getElementById('startLoop').addEventListener('click', () => {
      const N = Number(document.getElementById('loopCount').value);
      const logInterval = Math.max(1, Math.floor(N / 10));

      t0 = performance.now();
      Module.ccall('runLoop', 'void', ['number', 'number'], [N, logInterval]);
    });
  });
</script>
